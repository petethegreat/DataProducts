##------ [/Users/pete/ttc/git/DataProducts] Wed Jun  7 13:26:15 2017 ------##
install.packages('plotly')
library(plotly)
?plot_ly
m = plot_ly(data=mtcars,x=wt,y=mpg,color=cyl)
m = plot_ly(data=mtcars,x=hp,y=mpg,color=cyl)
?plot_ly
m <- plot_ly(data=mtcars,x=~wt,y=~mpg,color=~cyl)
m
m <- plot_ly(data=mtcars,x=~wt,y=~mpg,color=~Factor(cyl))
m
m <- plot_ly(data=mtcars,x=~wt,y=~mpg,color=~as.factor(cyl))
m
getwd()
setwd('/ttc/git/DataProducts')
setwd('./ttc/git/DataProducts')
getwd()
ls()
.ls()
list()
source('~/ttc/git/DataProducts/newmap.R')
source('~/ttc/git/DataProducts/newmap.R')
map
source('~/ttc/git/DataProducts/newmap.R')
map
source('~/ttc/git/DataProducts/newmap.R')
map
source('~/ttc/git/DataProducts/newmap.R')
map
po<-popupOptions(minwidth=250)
source('~/ttc/git/DataProducts/newmap.R')
map
source('~/ttc/git/DataProducts/newmap.R')
map
names(providers)
source('~/ttc/git/DataProducts/newmap.R')
map
names(providers)
source('~/ttc/git/DataProducts/newmap.R')
source('~/ttc/git/DataProducts/newmap.R')
source('~/ttc/git/DataProducts/newmap.R')
source('~/ttc/git/DataProducts/newmap.R')
names(providers)
##------ [/Users/pete/ttc/git/DataProducts] Fri Jun  9 13:19:04 2017 ------##
Sys.setlocale('LC_ALL','C')
lines<-readLines('movies/ratings.list')
lines<-lines[297:length(lines)]
# remove entries containing curly braces {} - often these are duplicates or movies that were suspended during/before production
# or tv shows - not interested
badlines<-grepl('\\{.*\\}',lines)
lines<-lines[!badlines]
titles<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
votes<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
head(titles)
length(titles)
moose<-factor(years)
length(levels(moose))
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
moose<-factor(years2)
length(levels(moose))
head(levels(moose))
Sys.setlocale('LC_ALL','C')
lines<-readLines('movies/ratings.list')
lines<-lines[297:738802]
# remove entries containing curly braces {} - often these are duplicates or movies that were suspended during/before production
# or tv shows - not interested
badlines<-grepl('\\{.*\\}',lines)
lines<-lines[!badlines]
titles<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
votes<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{6,6}[0-9\\.]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
moose<-factor(years2)
length(levels(moose))
head(levels(moose))
head(lines2)
head(lines)
moose<- as.numeric(votes)
head(votes)
sum(!is.na(votes))
sum(is.na(votes))
sum(!is.na(moose))
sum(is.na(moose))
head(titles[is.na(moose)])
titles<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
votes<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
length(levels(factor(years2)))
moose<- as.numeric(votes)
head(titles[is.na(moose)])
cowy<-lines[351820-297)
cowy<-lines[351820-297]
cowy
cowy<-lines[351820-296]
cowy
cowy<-lines[351820+296]
cowy
test<-'      10....3101      12   6.4  #1 (2005)'
#formatted<-gsub
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',test)
test
formatted
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',test)
formatted
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',test)
formatted
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)','\\1',test)
formatted
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)','\\1',test)
formatted
formatted<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)','\\2',test)
formatted
lines<-readLines('movies/ratings.list')
lines<-lines[297:738802]
# remove entries containing curly braces {} - often these are duplicates or movies that were suspended during/before production
# or tv shows - not interested
badlines<-grepl('\\{.*\\}',lines)
lines<-lines[!badlines]
badlines<-grepl('(T?V)',lines)
lines<-lines[!badlines]
length(lines)
titles<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
votes<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
moose<-numeric(rating)
moose<-as.numeric(rating)
head(titles[is.na(rating)])
head(titles[is.na(moose)])
lines<-readLines('movies/ratings.list')
lines<-lines[297:738802]
# remove entries containing curly braces {} - often these are duplicates or movies that were suspended during/before production
# or tv shows - not interested
badlines<-grepl('\\{.*\\}',lines)
lines<-lines[!badlines]
badlines<-grepl('(T?V)',lines)
lines<-lines[!badlines]
# These regex are not perfect, the formatting of the list file is not ideal (some titles are single quoted, some are double quoted, others are not quoted at all.)
# going to discard things that don't match here. That's quote a lot of the data, but I don't want to spend any more time on messing with regex in R.
titles<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
votes<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{rating<-gsub\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
rating<-as.numeric(rating)
badmatch<-is.na(rating)
titles<-titles[!badmatch]
years2<-years2[!badmatch]
rating<-rating[!badmatch]
votes<-votes[!badmatch]
ratingdf<-data.frame(title=titles,year=as.integer(years2),votes=as.integer(votes),rating=as.numeric(rating))rating<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
rating<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
titles<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\3',lines)
years<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\4',lines)
years2<-gsub('([0-9]{4,4})/?[A-Z]*','\\1',years)
votes<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\1',lines)
rating<-gsub('^.{6,6}[0-9\\.\\*]{10,10}[ \t]+([0-9]+)[ \t]+([0-9\\.]+)[ \t]+"([^"]+)"[ \t]+\\((.+)\\)','\\2',lines)
check<-as.numeric(rating)
badmatch<-is.na(check)
titles<-titles[!badmatch]
years2<-years2[!badmatch]
rating<-rating[!badmatch]
votes<-votes[!badmatch]
ratingdf<-data.frame(title=titles,year=as.integer(years2),votes=as.integer(votes),rating=as.numeric(rating))
head(ratingdf)
nrow(ratingdf)
sum(is.na(ratingdf$votes))
sum(is.na(ratingdf$rating))
sum(is.na(ratingdf$year))
g<- ggplot(data=ratingdf,aes(x=year,y=rating,colour=votes)) + geom_point() + geom_smooth()
library(ggplot2)
g<- ggplot(data=ratingdf,aes(x=year,y=rating,colour=votes)) + geom_point() + geom_smooth()
g
getWD()
getCWD()
cwd()
getcwd()
pwd()
getwd()
setwd('./ttc/git/DataProducts')
getwd()
list.dirs()
list()
ls()
?ls
?open
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
